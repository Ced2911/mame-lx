#if 0
//
// Generated by 2.0.20353.0
//
//   fxc /Fh xbr_ps.h /Tps_3_0 2xBR-v3.5a.cg /Exbr2x_ps_main
//
//
// Parameters:
//
//   sampler2D decal;
//   float2 settings_texture_size;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   settings_texture_size c0       1
//   decal                 s0       1
//

// Shader type: pixel 

xps_3_0
defconst decal, sampler2d, object, [1, 1], s0
defconst settings_texture_size, float, vector, [1, 2], c0
config AutoSerialize=false
config AutoResource=false
config PsMaxReg=14
// PsExportColorCount=1
// PsSampleControl=both

dcl_texcoord r0.xy
dcl_texcoord1 r1
dcl_color_centroid r2

def c252, 0, 0, 0, 0
def c253, 0, 0.25, 2, 0
def c254, 0.5, 0.833333015, 4, 1
def c255, 5.47200012, 14.3520002, 28.1760006, 0.75


    exec
    mad r5, r1, c253.z, r0.xyxy
    dp3 r2.x, r1.zx, c254.w
    dp3 r2.y, r1.wy, c254.w
    add r3, r0.xyxy, -r1.zwxy
    add r7, r0.xyxy, r1
    add r4.xy, r3.zw, r1.zw
  + movs r2._, r7.x
    exec
    add r0.zw, r7.xxxy, r1.zzzw
  + adds_prev r4.z, -r1.z
    add r2.xy, r0.xy, r2.xy
  + movs r2._, r7.y
    add r2.zw, r0.zzzw, r1.zzzw
  + adds_prev r4.w, -r1.w
    tfetch2D r6.xyz_, r7.zw, tf0
    tfetch2D r1.xyz_, r4.zw, tf0
    tfetch2D r4._xyz, r4.xy, tf0
    exec
    tfetch2D r11.xyz_, r7.xy, tf0
    tfetch2D r7.xyz_, r5.xy, tf0
    tfetch2D r9.xyz_, r5.zw, tf0
    tfetch2D r10.xyz_, r0.zw, tf0
    tfetch2D r12.xyz_, r2.zw, tf0
    tfetch2D r14.xyz_, r2.xy, tf0
    exec
    tfetch2D r2.xyz_, r3.xy, tf0
    tfetch2D r5._xyz, r3.zw, tf0
    tfetch2D r8.xyz_, r0.xy, tf0
    alloc colors
    exec
    mul r3.xy, r0.yx, c0.yx
    dp3 r13.x, r8.zxy, c255.xyz
    dp3 r13.y, r5.wyz, c255.xyz
    dp3 r13.z, r2.zxy, c255.xyz
    dp3 r0.x, r14.zxy, c255.xyz
    dp3 r0.y, r12.zxy, c255.xyz
    exec
    dp3 r13.w, r10.zxy, c255.xyz
    dp3 r0.z, r9.zxy, c255.xyz
    dp3 r0.w, r7.zxy, c255.xyz
    dp3 r4.x, r11.zxy, c255.xyz
    dp3 r4.y, r4.wyz, c255.xyz
    dp3 r4.z, r1.zxy, c255.xyz
    exec
    dp3 r4.w, r6.zxy, c255.xyz
    add r9.xyz, r4_abs.wxw, -r4_abs.xyz
    add r7.xw, r13_abs.w, -r0_abs.wz
    add r7.yz, -r13_abs.zzy, r4_abs.xxw
  + movs r2._, r4_abs.x
    add r12.xyz, r13_abs.x, -r13_abs.wzy
  + adds_prev r0.w, -r0_abs.x
    add r1, r13_abs.x, -r4_abs.zywx
  + movs r2._, r4_abs.w
    exec
    sne r10.xyz, r13_abs.x, r4_abs.xyz
  + adds_prev r0.z, -r0_abs.y
    mul r3.w, r12_abs.x, c254.z
  + adds r2.w, r1_abs.xy
    sne r4.xyz, r13_abs.xyz, r4_abs.wyz
  + movs r2._, r9_abs.x
    sge r4.w, r12_abs.z, r1_abs.z
  + muls_prev r3.z, c254.z
    sge r6.w, r12_abs.y, r12_abs.z
  + adds r5.x, r9_abs.yy
    sge r0.x, r1_abs.w, r12_abs.y
  + movs r2._, r7_abs.z
    exec
    sge r0.y, r1_abs.z, r1_abs.w
  + adds_prev r1.w, r0_abs.z
    cndgt r1.xyz, r0.y, r11.xyz, r6.xyz
    cndgt r0.xyz, r0.x, r2.xyz, r11.xyz
    cndgt r2.xyz, r6.w, r5.yzw, r2.xyz
    cndgt r6.xyz, r4.w, r6.xyz, r5.yzw
    add r5.w, r1.w, r0_abs.w
  + adds r5.y, r9_abs.zz
    exec
    mul r4.xyz, r10.xyz, r4.xyz
  + movs r2._, r2.w
    sge r5.yz, r9_abs.zzy, r5.xxy
  + adds_prev r5.x, r7_abs.w
    add r5.xw, r5.xw, r7_abs.xy
  + snes r4.x, r4.x
    add r3.zw, r5.xxxw, r3.zzzw
  + snes r4.y, r4.y
    sgt r5.x, r3.w, r3.z
  + snes r4.z, r4.z
    mul r7.xyz, r5.xyz, r4.xyz
    exec    // PredicateClean=false
    sne r5.zw, r7.yyyz, c253.x
  + frcs r5.y, r3.x
    setp_ne_push r2.w, c253.x, r7.x
  + frcs r5.x, r3.y
    (p0) mul r0.w, r5.z, r5.w
    (p0) add r1.xyz, r1.zyx, -r8.zyx
    setp_ne_push r2.w, r2.w, r0.w
    (p0) mad r3.xyz, r1.zyx, c254.y, r8.xyz
    exec    // PredicateClean=false
    (p0) mad r9.xyz, r1.zyx, c253.y, r8.xyz
    (p0) mad r4.xyz, r1.zyx, c253.y, r8.xyz
    setp_inv r2.w, r2.w
    setp_ne_push r2.w, r2.w, r7.y
    (p0) mov r4.xyz, r8.xyz
    (p0) mad r3.xyz, r1.zyx, c255.w, r8.xyz
    exec    // PredicateClean=false
    (p0) mad r9.xyz, r1.zyx, c253.y, r8.xyz
    setp_inv r2.w, r2.w
    setp_ne_push r2.w, r2.w, r7.z
    (p0) mad r3.xyz, r1.zyx, c255.w, r8.xyz
    (p0) mad r4.xyz, r1.zyx, c253.y, r8.xyz
    setp_inv r2.w, r2.w
    exec    // PredicateClean=false
    (p0) mov r4.xyz, r8.xyz
    (p0) mad r3.xyz, r1.zyx, c254.x, r8.xyz
    setp_pop r2.w, r2.w
    (p0) mov r9.xyz, r8.xyz
    setp_pop r2.w, r2.w
    setp_pop r2.w, r2.w
    exec    // PredicateClean=false
    setp_inv r2.w, r2.w
    (p0) mov r4.xyz, r8.xyz
    (p0) mov r9.xyz, r8.xyz
    (p0) mov r3.xyz, r8.xyz
    setp_ne_push r2.w, c253.x, r7.x
    (p0) mul r0.w, r5.z, r5.w
    exec    // PredicateClean=false
    (p0) add r1.xyz, r0.zyx, -r4.zyx
    setp_ne_push r2.w, r2.w, r0.w
    (p0) add r10.xyz, r0.xyz, -r8.xyz
    (p0) mad r4.xyz, r1.zyx, c254.y, r4.xyz
    (p0) add r0.xyz, r0.xyz, -r3.xyz
    (p0) mad r3.xyz, r0.xyz, c253.y, r3.xyz
    exec    // PredicateClean=false
    (p0) mad r8.xyz, r10.xyz, c253.y, r8.xyz
    setp_inv r2.w, r2.w
    setp_ne_push r2.w, r2.w, r7.y
    (p0) add r0.xyz, r0.xyz, -r3.xyz
    (p0) mad r4.xyz, r1.zyx, c255.w, r4.xyz
    (p0) mad r3.xyz, r0.xyz, c253.y, r3.xyz
    exec    // PredicateClean=false
    setp_inv r2.w, r2.w
    setp_ne_push r2.w, r2.w, r7.z
    (p0) add r0.xyz, r0.xyz, -r8.xyz
    (p0) mad r4.xyz, r1.zyx, c255.w, r4.xyz
    (p0) mad r8.xyz, r0.xyz, c253.y, r8.xyz
    setp_inv r2.w, r2.w
    exec    // PredicateClean=false
    (p0) mad r4.xyz, r1.zyx, c254.x, r4.xyz
    setp_ne_push r2.w, c253.x, r7.x
    (p0) mul r0.w, r5.z, r5.w
    (p0) add r0.xyz, r2.zyx, -r8.zyx
    setp_ne_push r2.w, r2.w, r0.w
    (p0) add r1.xyz, r2.xyz, -r9.xyz
    exec    // PredicateClean=false
    (p0) mad r8.xyz, r0.zyx, c254.y, r8.xyz
    (p0) add r2.xyz, r2.xyz, -r4.xyz
    (p0) mad r4.xyz, r2.xyz, c253.y, r4.xyz
    (p0) mad r9.xyz, r1.xyz, c253.y, r9.xyz
    setp_inv r2.w, r2.w
    setp_ne_push r2.w, r2.w, r7.y
    exec    // PredicateClean=false
    (p0) add r2.xyz, r2.xyz, -r4.xyz
    (p0) mad r8.xyz, r0.zyx, c255.w, r8.xyz
    (p0) mad r4.xyz, r2.xyz, c253.y, r4.xyz
    setp_inv r2.w, r2.w
    setp_ne_push r2.w, r2.w, r7.z
    (p0) add r2.xyz, r2.xyz, -r9.xyz
    exec    // PredicateClean=false
    (p0) mad r8.xyz, r0.zyx, c255.w, r8.xyz
    (p0) mad r9.xyz, r2.xyz, c253.y, r9.xyz
    setp_inv r2.w, r2.w
    (p0) mad r8.xyz, r0.zyx, c254.x, r8.xyz
    setp_ne_push r2.w, c253.x, r7.x
    (p0) mul r0.x, r5.z, r5.w
    exec    // PredicateClean=false
    (p0) add r2.xyz, r6.zyx, -r9.zyx
    setp_ne_push r2.w, r2.w, r0.x
    (p0) add r0.xyz, r6.xyz, -r3.xyz
    (p0) mad r9.xyz, r2.zyx, c254.y, r9.xyz
    (p0) add r2.xyz, r6.xyz, -r8.xyz
    (p0) mad r8.xyz, r2.xyz, c253.y, r8.xyz
    exec    // PredicateClean=false
    (p0) mad r3.xyz, r0.xyz, c253.y, r3.xyz
    setp_inv r2.w, r2.w
    setp_ne_push r2.w, r2.w, r7.y
    (p0) add r0.xyz, r6.xyz, -r8.xyz
    (p0) mad r9.xyz, r2.zyx, c255.w, r9.xyz
    (p0) mad r8.xyz, r0.xyz, c253.y, r8.xyz
    exec    // PredicateClean=false
    setp_inv r2.w, r2.w
    setp_ne_push r2.w, r2.w, r7.z
    (p0) add r0.xyz, r6.xyz, -r3.xyz
    (p0) mad r9.xyz, r2.zyx, c255.w, r9.xyz
    (p0) mad r3.xyz, r0.xyz, c253.y, r3.xyz
    setp_inv r2.w, r2.w
    exece
    (p0) mad r9.xyz, r2.zyx, c254.x, r9.xyz
    sgt r2.xw, c254.x, r5.yx
    cndge r0.xyz, -r2_abs.x, r9.xyz, r8.xyz
    cndge r2.xyz, -r2_abs.x, r3.xyz, r4.xyz
    cndgt oC0.xyz1, r2.w, r0.xyz, r2.xyz

// PDB hint 00000000-00000000-00000000

#endif

// This microcode is in native DWORD byte order.

const DWORD g_xps_xbr2x_ps_main[] =
{
    0x102a1100, 0x00000114, 0x00000814, 0x00000000, 0x00000024, 0x000000c0, 
    0x000000e8, 0x00000000, 0x00000000, 0x00000098, 0x0000001c, 0x0000008b, 
    0xffff0300, 0x00000002, 0x0000001c, 0x00000000, 0x00000084, 0x00000044, 
    0x00030000, 0x00010000, 0x0000004c, 0x00000000, 0x0000005c, 0x00020000, 
    0x00010000, 0x00000074, 0x00000000, 0x64656361, 0x6c00abab, 0x0004000c, 
    0x00010001, 0x00010000, 0x00000000, 0x73657474, 0x696e6773, 0x5f746578, 
    0x74757265, 0x5f73697a, 0x6500abab, 0x00010003, 0x00010002, 0x00010000, 
    0x00000000, 0x70735f33, 0x5f300032, 0x2e302e32, 0x30333533, 0x2e3000ab, 
    0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000014, 0x01fc0010, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000040, 0x000007d4, 
    0x10000e00, 0x00000008, 0x00000000, 0x00002863, 0x00030007, 0x00000001, 
    0x00003050, 0x0000f151, 0x0000f2a0, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x3e800000, 0x40000000, 0x00000000, 0x3f000000, 
    0x3f555550, 0x40800000, 0x3f800000, 0x40af1aa0, 0x4165a1cb, 0x41e16873, 
    0x3f400000, 0x0000600e, 0x60141200, 0x12000540, 0x0555601a, 0x30201200, 
    0x12000015, 0x00000000, 0x6023c400, 0x12000000, 0x00006029, 0x602f1200, 
    0x12000000, 0x00006035, 0x603b1200, 0x12000000, 0x00006041, 0x60471200, 
    0x10000000, 0x0000604d, 0x60531000, 0x10000000, 0x00006059, 0x605f1000, 
    0x10000000, 0x00006065, 0x606b1000, 0x10000000, 0x00006071, 0x60771000, 
    0x10000000, 0x0000607d, 0x60831000, 0x10000000, 0x00006089, 0x608f1000, 
    0x10000000, 0x00006095, 0x609b1000, 0x10000000, 0x000050a1, 0x00002200, 
    0x00000000, 0xc80f0205, 0x0000c6a0, 0xab01fd00, 0xc8010202, 0x006e1b00, 
    0xb001fe00, 0xc8020202, 0x00b31b00, 0xb001fe00, 0xc80f0203, 0x02a0aa00, 
    0xe0000100, 0xc80f0207, 0x00a00000, 0xe0000100, 0x14030204, 0x001a1a6c, 
    0xe0030107, 0x044c0400, 0x01ac06c6, 0xe0070101, 0x14030202, 0x00b0b0b1, 
    0xe0000207, 0x048c0402, 0x0106061b, 0xe0000101, 0xb80860e1, 0x1f1ffe88, 
    0x00004000, 0xb8081081, 0x1f1ffe88, 0x00004000, 0x10084081, 0x1f1ff447, 
    0x00004000, 0x1008b0e1, 0x1f1ffe88, 0x00004000, 0x100870a1, 0x1f1ffe88, 
    0x00004000, 0xb80890a1, 0x1f1ffe88, 0x00004000, 0xb808a001, 0x1f1ffe88, 
    0x00004000, 0xb808c041, 0x1f1ffe88, 0x00004000, 0x1008e041, 0x1f1ffe88, 
    0x00004000, 0x10082061, 0x1f1ffe88, 0x00004000, 0xb8085061, 0x1f1ff447, 
    0x00004000, 0x10088001, 0x1f1ffe88, 0x00004000, 0xc8030203, 0x006d6d00, 
    0xa1000000, 0xc801020d, 0x00bec000, 0xb008ff00, 0xc802020d, 0x00c3c000, 
    0xb005ff00, 0xc804020d, 0x00bec000, 0xb002ff00, 0xc8010200, 0x00bec000, 
    0xb00eff00, 0xc8020200, 0x00bec000, 0xb00cff00, 0xc808020d, 0x00bec000, 
    0xb00aff00, 0xc8040200, 0x00bec000, 0xb009ff00, 0xc8080200, 0x00bec000, 
    0xb007ff00, 0xc8010204, 0x00bec000, 0xb00bff00, 0xc8020204, 0x00c3c000, 
    0xb004ff00, 0xc8040204, 0x00bec000, 0xb001ff00, 0xc8080204, 0x00bec000, 
    0xb006ff00, 0xc8070209, 0x021fc000, 0xe0848400, 0xc8090207, 0x021bc700, 
    0xe08d8000, 0x14060207, 0x04b61c6c, 0xe08d8484, 0x0487000c, 0x036cb76c, 
    0xe08d8d80, 0x140f0201, 0x026c521b, 0xe08d8484, 0x0447000a, 0x016cc0b1, 
    0xe78d8480, 0x00880203, 0x006cc661, 0xa18cfe81, 0x14070204, 0x00c0c36c, 
    0xe78d8489, 0x0c480304, 0x00c6c6c6, 0xc68c81fe, 0x00180506, 0x00b1c6b1, 
    0xe68c8c89, 0x14010200, 0x001bb1c6, 0xe6818c87, 0x04820100, 0x00c61bc6, 
    0xe6818180, 0xc8070201, 0x00b1c0c0, 0xee000b06, 0xc8070200, 0x006cc0c0, 
    0xee00020b, 0xc8070202, 0x001b15c0, 0xee060502, 0xc8070206, 0x001bc015, 
    0xee040605, 0x00280505, 0x001b1bc6, 0xe0018089, 0x14070204, 0x00c0c01b, 
    0xe10a0402, 0x04160505, 0x00b6bc1b, 0xe6890587, 0x28190405, 0x0018b06c, 
    0xe0058704, 0x282c0403, 0x002c06b1, 0xe0050304, 0x28410405, 0x001bc6c6, 
    0xe5030304, 0xc8070207, 0x00c0c000, 0xe1050400, 0x2c2c0505, 0x00f16c6c, 
    0xa707fd03, 0x2c180502, 0x006c6cb1, 0x75fd0703, 0xc8080200, 0x18c61b00, 
    0xe1050500, 0xc8070201, 0x1a626200, 0xe0010800, 0xc8080202, 0x001b1b00, 
    0xf5020000, 0xc8070203, 0x1862b1c0, 0xab01fe08, 0xc8070209, 0x1862b1c0, 
    0xab01fd08, 0xc8070204, 0x1862b1c0, 0xab01fd08, 0x7c800202, 0x0000001b, 
    0xe2020202, 0xc8080202, 0x001bb100, 0xf5020700, 0xc8070204, 0x18c0c000, 
    0xe2080800, 0xc8070203, 0x18621bc0, 0xab01ff08, 0xc8070209, 0x1862b1c0, 
    0xab01fd08, 0x7c800202, 0x0000001b, 0xe2020202, 0xc8080202, 0x001bc600, 
    0xf5020700, 0xc8070203, 0x18621bc0, 0xab01ff08, 0xc8070204, 0x1862b1c0, 
    0xab01fd08, 0x7c800202, 0x0000001b, 0xe2020202, 0xc8070204, 0x18c0c000, 
    0xe2080800, 0xc8070203, 0x18626cc0, 0xab01fe08, 0x80800202, 0x0000001b, 
    0xe2020202, 0xc8070209, 0x18c0c000, 0xe2080800, 0x80800202, 0x0000001b, 
    0xe2020202, 0x80800202, 0x0000001b, 0xe2020202, 0x7c800202, 0x0000001b, 
    0xe2020202, 0xc8070204, 0x18c0c000, 0xe2080800, 0xc8070209, 0x18c0c000, 
    0xe2080800, 0xc8070203, 0x18c0c000, 0xe2080800, 0xc8080202, 0x006c6c00, 
    0x75fd0700, 0xc8080200, 0x18c61b00, 0xe1050500, 0xc8070201, 0x1a626200, 
    0xe0000400, 0xc8080202, 0x001b1b00, 0xf5020000, 0xc807020a, 0x1ac0c000, 
    0xe0000800, 0xc8070204, 0x1862b1c0, 0xab01fe04, 0xc8070200, 0x1ac0c000, 
    0xe0000300, 0xc8070203, 0x18c0b1c0, 0xab00fd03, 0xc8070208, 0x18c0b1c0, 
    0xab0afd08, 0x7c800202, 0x0000001b, 0xe2020202, 0xc8080202, 0x001bb100, 
    0xf5020700, 0xc8070200, 0x1ac0c000, 0xe0000300, 0xc8070204, 0x18621bc0, 
    0xab01ff04, 0xc8070203, 0x18c0b1c0, 0xab00fd03, 0x7c800202, 0x0000001b, 
    0xe2020202, 0xc8080202, 0x001bc600, 0xf5020700, 0xc8070200, 0x1ac0c000, 
    0xe0000800, 0xc8070204, 0x18621bc0, 0xab01ff04, 0xc8070208, 0x18c0b1c0, 
    0xab00fd08, 0x7c800202, 0x0000001b, 0xe2020202, 0xc8070204, 0x18626cc0, 
    0xab01fe04, 0xc8080202, 0x006c6c00, 0x75fd0700, 0xc8080200, 0x18c61b00, 
    0xe1050500, 0xc8070200, 0x1a626200, 0xe0020800, 0xc8080202, 0x001b1b00, 
    0xf5020000, 0xc8070201, 0x1ac0c000, 0xe0020900, 0xc8070208, 0x1862b1c0, 
    0xab00fe08, 0xc8070202, 0x1ac0c000, 0xe0020400, 0xc8070204, 0x18c0b1c0, 
    0xab02fd04, 0xc8070209, 0x18c0b1c0, 0xab01fd09, 0x7c800202, 0x0000001b, 
    0xe2020202, 0xc8080202, 0x001bb100, 0xf5020700, 0xc8070202, 0x1ac0c000, 
    0xe0020400, 0xc8070208, 0x18621bc0, 0xab00ff08, 0xc8070204, 0x18c0b1c0, 
    0xab02fd04, 0x7c800202, 0x0000001b, 0xe2020202, 0xc8080202, 0x001bc600, 
    0xf5020700, 0xc8070202, 0x1ac0c000, 0xe0020900, 0xc8070208, 0x18621bc0, 
    0xab00ff08, 0xc8070209, 0x18c0b1c0, 0xab02fd09, 0x7c800202, 0x0000001b, 
    0xe2020202, 0xc8070208, 0x18626cc0, 0xab00fe08, 0xc8080202, 0x006c6c00, 
    0x75fd0700, 0xc8010200, 0x18c61b00, 0xe1050500, 0xc8070202, 0x1a626200, 
    0xe0060900, 0xc8080202, 0x001b6c00, 0xf5020000, 0xc8070200, 0x1ac0c000, 
    0xe0060300, 0xc8070209, 0x1862b1c0, 0xab02fe09, 0xc8070202, 0x1ac0c000, 
    0xe0060800, 0xc8070208, 0x18c0b1c0, 0xab02fd08, 0xc8070203, 0x18c0b1c0, 
    0xab00fd03, 0x7c800202, 0x0000001b, 0xe2020202, 0xc8080202, 0x001bb100, 
    0xf5020700, 0xc8070200, 0x1ac0c000, 0xe0060800, 0xc8070209, 0x18621bc0, 
    0xab02ff09, 0xc8070208, 0x18c0b1c0, 0xab00fd08, 0x7c800202, 0x0000001b, 
    0xe2020202, 0xc8080202, 0x001bc600, 0xf5020700, 0xc8070200, 0x1ac0c000, 
    0xe0060300, 0xc8070209, 0x18621bc0, 0xab02ff09, 0xc8070203, 0x18c0b1c0, 
    0xab00fd03, 0x7c800202, 0x0000001b, 0xe2020202, 0xc8070209, 0x18626cc0, 
    0xab02fe09, 0xc8090202, 0x006c6d00, 0x65fe0500, 0xc8070200, 0x046cc0c0, 
    0xed820908, 0xc8070202, 0x046cc0c0, 0xed820304, 0xc88fc000, 0x001bc0c0, 
    0xee020002, 0x00000000, 0x00000000, 0x00000000
};
