#if 0
//
// Generated by 2.0.20353.0
//
//   fxc /Fh primary.vs.h /Tvs_3_0 primary.fx /Evs_main
//
//
// Parameters:
//
//   float PostPass;
//   float TargetHeight;
//   float TargetWidth;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   TargetWidth  c0       1
//   TargetHeight c1       1
//   PostPass     c2       1
//

// Shader type: vertex 

xvs_3_0
defconst PostPass, float, scalar, [1, 1], c2
defconst TargetHeight, float, scalar, [1, 1], c1
defconst TargetWidth, float, scalar, [1, 1], c0
config AutoSerialize=false
config AutoResource=false
config VsMaxReg=3
config VsResource=1
// VsExportCount=1

dcl_index r0.x
dcl_texcoord o0.xy
dcl_color o1

def c252, 0, 0, 0, 0
def c253, 0, 0, 0, 0
def c254, 0, 0, 0, 0
def c255, -1, 1, 0, 0


    exec
    vfetch r2.xyz1, r0.x, position
    vfetch r1, r0.x, color
    vfetch r0.xy__, r0.x, texcoord
    alloc position
    exec
    rcp r0.z, c0.x
    rcp r0.w, c1.x
    mov oPos.zw, r2.zzzw
    dp2add r3.x, r0.z, r2.x, c255.z
    dp2add r3.y, -r0.w, r2.y, c255.z
    add oPos.xy, c255.xy, r3.xy
    alloc interpolators
    exece
    mad r0.zw, r0.zzzw, r2.xxxy, -r0.xxxy
    mad o0.xy, r0.zw, c2.x, r0.xy
    mov o1, r1

// PDB hint 00000000-00000000-00000000

#endif

// This microcode is in native DWORD byte order.

const DWORD g_xvs_vs_main[] =
{
    0x102a1101, 0x00000134, 0x00000100, 0x00000000, 0x00000024, 0x000000c8, 
    0x000000f0, 0x00000000, 0x00000000, 0x000000a0, 0x0000001c, 0x00000094, 
    0xfffe0300, 0x00000003, 0x0000001c, 0x00000000, 0x0000008d, 0x00000058, 
    0x00020002, 0x00010000, 0x00000064, 0x00000000, 0x00000074, 0x00020001, 
    0x00010000, 0x00000064, 0x00000000, 0x00000081, 0x00020000, 0x00010000, 
    0x00000064, 0x00000000, 0x506f7374, 0x50617373, 0x00ababab, 0x00000003, 
    0x00010001, 0x00010000, 0x00000000, 0x54617267, 0x65744865, 0x69676874, 
    0x00546172, 0x67657457, 0x69647468, 0x0076735f, 0x335f3000, 0x322e302e, 
    0x32303335, 0x332e3000, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 
    0x00000014, 0x00fc0010, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000040, 0x000000c0, 0x00110003, 0x00000000, 0x00000000, 0x00001842, 
    0x00000001, 0x00000003, 0x00000002, 0x00000290, 0x00100003, 0x0000a004, 
    0x00305005, 0x00003050, 0x0001f1a0, 0x0000100d, 0x0000100e, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xbf800000, 
    0x3f800000, 0x00000000, 0x00000000, 0x70153003, 0x00001200, 0xc2000000, 
    0x00006006, 0x00001200, 0xc4000000, 0x0000300c, 0x00002200, 0x00000000, 
    0x05f82000, 0x00000a88, 0x00000000, 0x05f81000, 0x00000688, 0x00000000, 
    0x05f80000, 0x00000fc8, 0x00000000, 0x4c400000, 0x0000006c, 0xc2000000, 
    0x4c800000, 0x0000006c, 0xc2000001, 0xc80c803e, 0x00060600, 0xe2020200, 
    0xc8010003, 0x00c66cc6, 0xd10002ff, 0xc8020003, 0x041bb1c6, 0xd10002ff, 
    0xc803803e, 0x00b0b000, 0x60ff0300, 0xc80c0000, 0x0106acac, 0xeb000200, 
    0xc8038000, 0x001a6cb0, 0xab000200, 0xc80f8001, 0x00000000, 0xe2010100, 
    0x00000000, 0x00000000, 0x00000000
};
